<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Books Available</title>
    <link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="css/lists.css">
</head>

<body>
    <div class="container mt-5">
        <h1 class="text-center my-4">Following Books Are Available for Request</h1>
        <form action="/books" method="GET" class="mb-3">
            <div class="form-group">
                <label for="q">Filter</label>
                <input type="text" name="q" class="form-control" placeholder="example: &quot;author:foobar,genre:fiction &quot; ">
            </div>
            <button type="submit" class="btn btn-primary">Apply</button>
        </form>
        <% if (user.role === 'admin') { %>
            <div class="mb-3 text-center">
                <button class="btn btn-danger mr-2" onclick="removeSelectedBooks()">Remove Selected Books</button>
                <button class="btn btn-info" onclick="updateSelectedBook()">Update Selected Book</button>
            </div>
        <% } %>
        <% if (user.role !== 'admin') { %>
            <div class="text-center mb-3">
                <button class="btn btn-success" onclick="requestSelectedBooks()">Request Selected Books</button>
            </div>
        <% } %>
        <table class="table table-striped table-hover">
            <thead class="thead-dark">
                <tr>
                    <th>Select</th>
                    <th>Title</th>
                    <th>Author</th>
                    <th>Genre</th>
                    <th>Language</th>
                    <th>Count</th>
                </tr>
            </thead>
            <tbody>
                <% books.forEach(book => { %>
                    <tr>
                        <td><input type="checkbox" name="selected_books" value="<%= book.book_id %>"></td>
                        <td><%= book.book_title %></td>
                        <td><%= book.book_author %></td>
                        <td><%= book.book_genre %></td>
                        <td><%= book.book_language %></td>
                        <td><%= book.book_count %></td>
                    </tr>
                <% }); %>
            </tbody>
        </table>
    </div>

    <script>
        const removeSelectedBooks = () => {
            const selectedBooks = document.querySelectorAll('input[name="selected_books"]:checked');
            if (selectedBooks.length < 1) {
                alert('Please select at least one book to delete.');
                return;
            }
            const bookIds = Array.from(selectedBooks).map(book => book.value);
            fetch('/books/delete', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ id: bookIds })
            }).then(response => {
                if (response.ok) {
                    alert('Selected books removed successfully');
                    location.reload();
                } else {
                    alert('Failed to remove selected books');
                }
            }).catch(error => {
                alert('An error occurred while removing selected books:', error);
            });
        };

        const updateSelectedBook = () => {
            const selectedBooks = document.querySelectorAll('input[name="selected_books"]:checked');
            if (selectedBooks.length > 1) {
                alert('Only one book can be updated at a time!');
            } else if (selectedBooks.length === 1) {
                const bookId = selectedBooks[0].value;
                window.location.href = '/books/update?id=' + bookId;
            } else {
                alert('Please select a book to update');
            }
        };

        const requestSelectedBooks = () => {
            const selectedBooks = document.querySelectorAll('input[name="selected_books"]:checked');
            const bookIds = Array.from(selectedBooks).map(book => book.value);
            bookIds.forEach(bookId => {
                fetch('/books/request', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ id: bookId })
                }).then(response => {
                    if (response.ok) {
                        console.log(response);
                    } else {
                        alert('Failed to request selected books. Contact Admin.');
                        return;
                    }
                }).catch(error => {
                    console.error('An error occurred while requesting selected books:', error);
                    return;
                });
            });
            alert('Selected books requested successfully');
        };
    </script>

    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
</body>

</html>
